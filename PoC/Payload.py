#!/usr/bin/env python3
# embed_payload.py

import os

# ======= Cấu hình file đầu vào và đầu ra =======
# Bạn có thể thay đổi đường dẫn file input và tên file header ở đây.
INPUT_FILE = "Payload.exe"             # Tên (hoặc đường dẫn) file .exe cần nhúng
OUTPUT_HEADER = "payload_data.h"   # Tên file .h sẽ được tạo ra
# ===============================================

def bytes_to_cpp_array(data_bytes, line_width=12):
    """
    Chuyển một chuỗi bytes thành chuỗi định dạng C++ array,
    mỗi dòng chứa line_width phần tử.
    """
    hex_bytes = [f"0x{b:02X}" for b in data_bytes]
    lines = []
    for i in range(0, len(hex_bytes), line_width):
        line = ", ".join(hex_bytes[i:i+line_width])
        lines.append("    " + line)
    return ",\n".join(lines)

def generate_header(input_path, output_path, array_name="embedded_payload", size_name="embedded_payload_size"):
    # Kiểm tra xem file input có tồn tại không
    if not os.path.isfile(input_path):
        print(f"[!] File '{input_path}' không tồn tại.")
        return

    # Đọc toàn bộ file nhị phân
    with open(input_path, "rb") as f:
        data = f.read()
    data_size = len(data)

    # Tạo phần nội dung mảng byte
    array_content = bytes_to_cpp_array(data)

    # Viết ra file header
    with open(output_path, "w", encoding="utf-8") as out:
        out.write("//------------------------------------------------------------------------------\n")
        out.write("// This file is auto-generated by embed_payload.py\n")
        out.write("// Do not edit manually.\n")
        out.write("//------------------------------------------------------------------------------\n\n")
        out.write("#pragma once\n")
        out.write("#include <Windows.h>   // for BYTE, DWORD\n\n")
        out.write(f"// Kích thước của payload (bytes)\n")
        out.write(f"const DWORD {size_name} = {data_size}u;\n\n")
        out.write(f"// Dữ liệu payload nhúng\n")
        out.write(f"unsigned char {array_name}[] = {{\n")
        out.write(f"{array_content}\n")
        out.write("};\n")
        out.write("\n")
        out.write(f"// sizeof({array_name}) == {size_name}\n")

    print(f"[+] Đã tạo header: {output_path} (kích thước: {data_size} bytes)")

def main():
    # Nếu OUTPUT_HEADER không có đuôi .h, tự thêm vào
    out = OUTPUT_HEADER
    if not out.lower().endswith(".h"):
        out += ".h"
    generate_header(INPUT_FILE, out)

if __name__ == "__main__":
    main()